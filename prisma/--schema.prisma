// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String @db.VarChar(255)
  lastName String @db.VarChar(255)
  email String @db.VarChar(255) @unique
  mobile String @db.VarChar(15)
  password String @db.VarChar(255)
  otp String @db.VarChar(50)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  customers Customers[]
  categories Categories[]
  products Products[]
  invoices Invoices[]
  invoiceProducts InvoiceProducts[]
}

model Customers {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  userId BigInt @db.UnsignedBigInt
  name String @db.VarChar(255)
  email String @db.VarChar(255)
  mobile String @db.VarChar(15)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  invoices Invoices[]

  users Users @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}

model Categories {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  userId BigInt @db.UnsignedBigInt
  name String @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  products Products[]

  users Users @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}

model Products {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  userId BigInt @db.UnsignedBigInt
  categoryId BigInt @db.UnsignedBigInt
  name String @db.VarChar(255)
  price String @db.VarChar(10)
  unit String @db.VarChar(255)
  imageUrl String @db.VarChar(500)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  invoiceProducts InvoiceProducts?

  users Users @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  categories Categories @relation(fields: [categoryId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}

model Invoices {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  userId BigInt @db.UnsignedBigInt
  customerId BigInt @db.UnsignedBigInt
  total String @db.VarChar(10)
  discount String @db.VarChar(10)
  vat String @db.VarChar(10)
  payable String @db.VarChar(10)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  invoiceProducts InvoiceProducts[]

  users Users @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  customers Customers @relation(fields: [customerId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}

model InvoiceProducts{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  userId BigInt @db.UnsignedBigInt
  productId BigInt @unique @db.UnsignedBigInt
  invoiceId BigInt @db.UnsignedBigInt
  quantity String @db.VarChar(10)
  salePrice String @db.VarChar(10)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  users Users @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoices Invoices @relation(fields: [invoiceId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  products Products @relation(fields: [productId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}